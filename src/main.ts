import { config } from 'dotenv';
config();

import { ValidationPipe, BadRequestException } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.useGlobalPipes(
    new ValidationPipe({
      exceptionFactory: (errors) => {
        const result = errors.map((error) => ({
          property: error.property,
          message: error.constraints[Object.keys(error.constraints)[0]],
        }));
        return new BadRequestException({ validation_errors: result });
      },
      stopAtFirstError: true,
    }),
  );

  app.enableCors({ origin: '*' });

  const portStr = process.env.PORT;
  let port = Number(portStr);
  if (!portStr || isNaN(port)) {
    port = 8080;
  }

  const config = new DocumentBuilder()
    .setTitle('PlayGreen Sports API')
    .setDescription('PlayGreen Sports API description')
    .setVersion('1.0')
    .addBearerAuth(
      {
        description: `Please enter the JWT token generated by auth/login or auth/signup endpoints in the input, click the "Authorize" button and close the popup.`,
        name: 'Authorization',
        bearerFormat: 'Bearer',
        scheme: 'Bearer',
        type: 'http', // I`ve attempted type: 'apiKey' too
        in: 'Header'
      },
      'Authorization'
    )
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  await app.listen(Number(port));
  console.log(`Server is running on port ${port}`);
}
bootstrap();
